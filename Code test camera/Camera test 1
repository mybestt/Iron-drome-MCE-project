import cv2
import numpy as np

# เปิดกล้องตัวเดียว
cap = cv2.VideoCapture(0)  # กล้องตัวที่ 1

# กำหนดขอบเขตสี HSV ของลูกปิงปอง (สีเหลือง)
lower_yellow = np.array([20, 100, 100])  # ค่าสี HSV ต่ำสุดสำหรับสีเหลือง
upper_yellow = np.array([30, 255, 255])  # ค่าสี HSV สูงสุดสำหรับสีเหลือง

# สร้างหน้าต่างสำหรับกล้องและตั้งค่าให้เป็นแบบ fullscreen
cv2.namedWindow('Ping Pong Ball Detection', cv2.WND_PROP_FULLSCREEN)
cv2.setWindowProperty('Ping Pong Ball Detection', cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)

while True:
    # อ่านภาพจากกล้อง
    ret, frame = cap.read()

    # ตรวจสอบว่ามีการอ่านภาพสำเร็จ
    if not ret:
        break
    
    # วาดกริดลงบนภาพจากกล้อง
    for i in range(0, frame.shape[1], 100):  # เส้นแนวตั้ง
        cv2.line(frame, (i, 0), (i, frame.shape[0]), (255, 255, 255), 1)
    for i in range(0, frame.shape[0], 100):  # เส้นแนวนอน
        cv2.line(frame, (0, i), (frame.shape[1], i), (255, 255, 255), 1)

    # แปลงภาพจาก BGR เป็น HSV
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    
    # สร้าง Mask เพื่อกรองเฉพาะสีเหลือง
    mask = cv2.inRange(hsv, lower_yellow, upper_yellow)
    
    # ใช้การ Blur เพื่อลด Noise
    mask = cv2.GaussianBlur(mask, (5, 5), 0)
    
    # หาคอนทัวร์ (Contours) จาก mask
    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    
    # วนลูปในคอนทัวร์ที่เจอ
    for contour in contours:
        if cv2.contourArea(contour) > 300:
            # หาจุดศูนย์กลางและรัศมีของวงกลมที่ครอบคอนทัวร์
            ((x, y), radius) = cv2.minEnclosingCircle(contour)
            if radius > 10 and radius < 50:
                # วาดวงกลมรอบๆ ลูกปิงปอง
                cv2.circle(frame, (int(x), int(y)), int(radius), (0, 255, 0), 2)
                # แสดงข้อความว่าตรวจพบลูกปิงปอง
                cv2.putText(frame, "Ping Pong Detected", (int(x - radius), int(y - radius)),
                            cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)
                # แสดงพิกัด (x, y) ในหน่วยพิกเซลบนเฟรม
                cv2.putText(frame, f"Position: ({int(x)}, {int(y)})", (10, 30),
                            cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 0, 0), 2)
    
    # แสดงภาพผลลัพธ์จากกล้อง
    cv2.imshow('Ping Pong Ball Detection', frame)
    
    # หากกดปุ่ม 'q' จะออกจากลูป
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# ปิดกล้องและปิดหน้าต่างแสดงผล
cap.release()
cv2.destroyAllWindows()
